# Application routing configuration.
# Declares endpoints for login/logout, dashboard, ingredient lists, recipe searches,
# saved recipes and health checks; used by controllers and integration tests.
#
# @param format [Symbol] example placeholder for documentation consistency
# @return [void] the routes.rb file declares the application's URL mappings
# def to_format(format = :html)
#   # format the routes description (example placeholder for YARD)
# end
#
Rails.application.routes.draw do
  get "saved_recipes/index"
  get "saved_recipes/create"
  get "saved_recipes/destroy"
  resources :ingredient_list_recipes, only: [ :show ]
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  # Reveal health status on /up that returns 200 if the app boots with no exceptions, otherwise 500.
  # Can be used by load balancers and uptime monitors to verify that the app is live.
  get "up" => "rails/health#show", as: :rails_health_check

  # Render dynamic PWA files from app/views/pwa/* (remember to link manifest in application.html.erb)
  # get "manifest" => "rails/pwa#manifest", as: :pwa_manifest
  # get "service-worker" => "rails/pwa#service_worker", as: :pwa_service_worker

  # Defines the root path route ("/")
  # root "posts#index"

  # The as: :something allows developers to write something_path when
  # the want to refer to this end point
  get    "/login", to: "login#new", as: :login
  delete "/logout", to: "login#destroy", as: :logout

  # OAuth related route
  namespace :oauth do
    namespace :google_oauth2 do
      # Corresponds to /oauth/google_oauth2/callback which corresponds
      # maps to the call OAuth::GoogleOauth2#callback which is a controller
      # class method that we have to define
      get "callback"
    end
  end

  # Dashboard related (after login)
  get "/dashboard", to: "dashboard#show", as: :dashboard
  # Dedicated page for adding ingredients (modal moved to its own route)
  # legacy add-ingredients path kept for backward compatibility; route to
  # the ingredient lists show page which renders the add-ingredients UI.
  get "/add-ingredients", to: "ingredient_lists#add_ingredients", as: :add_ingredients
  # Prefer the ingredient list show page which displays the add-ingredients UI
  # This route renders the add-ingredients UI when called without an :id.
  # Use a distinct helper name so it doesn't clobber the resource helper
  # generated by `resources :ingredient_lists` (which expects an :id).
  get "/ingredient-list", to: "ingredient_lists#show", as: :ingredient_list_legacy
  # Endpoint for ingredient search used by the add-ingredients UI (AJAX)
  # and by the no-JS fallback (HTML). Routed to IngredientListsController.
  get "/ingredient_search", to: "ingredient_lists#ingredient_search", as: :ingredient_search

  resources :ingredient_lists, only: [ :index, :create, :destroy, :show, :update ]

  # This is an intermediate path that takes in ingredient list id as
  # query parameter and genrates the URL which includes the ingredient list
  # id as the URI parameter and redirects to recipes_search path
  get "/recipes/ingredient_lists/intermediate",
      to: "recipes#search_intermediate",
      as: :recipes_search_intermediate

  get "/recipes/ingredient_lists/:ingredient_list_id",
      to: "recipes#search",
      as: :recipes_search

  # Routes for saved recipes
  resources :saved_recipes, only: [ :index, :create, :destroy ]

  # Redirect the root path to the dashboard, this will show
  # the user dashboard if already logged in, or redirect to the logout
  # if user is not logged in
  root to: redirect("/dashboard")
end
